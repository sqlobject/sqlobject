[tox]
minversion = 1.8
envlist = {py26,py27}-mysql,{py26,py27,py34}-postgres,{py26,py27,py34}-sqlite,{py27,py34}-flake8

# Base test environment settings
[testenv]
# Don't fail or warn on uninstalled commands
whitelist_externals =
    psql
    mysql
# Ensure we cd into sqlobject before running the tests
changedir = ./sqlobject/
basepython =
    py26: python2.6
    py27: python2.7
    py34: python3.4
deps =
    pytest
    FormEncode >= 1.1.1
    PyDispatcher>=2.0.4
    mysql: mysql-python
    postgres: psycopg2


# MySQL test environments
[test-mysql]
commands =
    mysql -e 'create database sqlobject_test;';
    py.test -D mysql://root:@localhost/sqlobject_test;
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-mysql]
commands = {[test-mysql]commands}

[testenv:py27-mysql]
commands = {[test-mysql]commands}

# PostgreSQL test environments
[test-postgres]
commands =
    psql -c 'create database sqlobject_test;' -U postgres;
    py.test -D postgres://postgres:@localhost/sqlobject_test;
    psql -c 'drop database sqlobject_test;' -U postgres

[testenv:py26-postgres]
commands = {[test-postgres]commands}

[testenv:py27-postgres]
commands = {[test-postgres]commands}

[testenv:py34-postgres]
commands = {[test-postgres]commands}

# sqlite test environments
[test-sqlite]
commands =
    py.test -D sqlite:///tmp/sqlobject_test.sqdb

[testenv:py26-sqlite]
commands = {[test-sqlite]commands}

[testenv:py27-sqlite]
commands = {[test-sqlite]commands}

[testenv:py34-sqlite]
commands = {[test-sqlite]commands}

# flake8
[test-flake8]
deps =
    flake8
commands = flake8

[testenv:py27-flake8]
basepython = python2.7
deps = {[test-flake8]deps}
commands = {[test-flake8]commands}

[testenv:py34-flake8]
basepython = python3.4
deps = {[test-flake8]deps}
commands = {[test-flake8]commands}
