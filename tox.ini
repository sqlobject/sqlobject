[tox]
minversion = 3.15
envlist = py27,py3{4,5,6,7,8,9,10,11}-sqlite{,-memory},py{27,36,311}-flake8

# Base test environment settings
[testenv]
# Ensure we cd into sqlobject before running the tests
changedir = ./sqlobject/
commands =
    {envpython} --version
    {envpython} -c "import struct; print(struct.calcsize('P') * 8)"
    {envpython} -m pytest --version
deps =
    -rdevscripts/requirements/requirements_tests.txt
    py34: pendulum < 2.1
    py34: zope.datetime < 4.3
    !py34: pendulum
    !py34: zope.datetime
    mysqldb: mysql-python
    mysqlclient: mysqlclient
    mysql-connector: mysql-connector <= 2.2.2
    mysql-oursql: git+https://github.com/sqlobject/oursql.git@master#egg=oursql
    mysql-oursql3: git+https://github.com/sqlobject/oursql.git@py3k#egg=oursql
    pymysql: -rdevscripts/requirements/requirements_pymysql.txt
    mariadb: mariadb
    py34-psycopg: psycopg2-binary==2.8.4
    !py34-psycopg: psycopg2-binary
    pygresql: -rdevscripts/requirements/requirements_pygresql.txt
    pypostgresql: git+https://github.com/sqlobject/py-postgresql.git@combined-fixes#egg=py-postgresql
    pg8000: -rdevscripts/requirements/requirements_pg8000.txt
    pyodbc: pyodbc
    pypyodbc: pypyodbc
    supersqlite: supersqlite
    mssql-pymssql: -rdevscripts/requirements/requirements_pymssql.txt
    mssql-pytds: python-tds
    firebird-fdb: fdb
    firebirdsql: firebirdsql
passenv = CI
setenv =
    PGPASSWORD = test
# Don't fail or warn on uninstalled commands
platform = linux
whitelist_externals =
    cmd
    mysql
    createdb
    dropdb
    rm
    sudo
    isql-fb
    sqlcmd

# MySQL test environments
[mysqldb]
commands =
    {[testenv]commands}
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://localhost/sqlobject_test?driver=mysqldb&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py27-mysqldb-noauto]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mysqldb]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysqldb]
commands = {envpython} -c "print('MySQL-python requires Python 2.7')"
deps =

[mysqlclient]
commands =
    {[testenv]commands}
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://localhost/sqlobject_test?driver=mysqldb&charset=utf8&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py27-mysqlclient]
commands = {envpython} -c "print('mysqlclient requires Python 3.4+')"
deps =

[testenv:py3{4,5,6,7,8,9,10,11}-mysqlclient]
commands = {[mysqlclient]commands}

[mysql-connector]
commands =
    {[testenv]commands}
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://runner:@localhost/sqlobject_test?driver=connector&charset=utf8&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py27-mysql-connector]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mysql-connector]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-connector]
commands = {[mysql-connector]commands}

[oursql]
commands =
    {[testenv]commands}
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://localhost/sqlobject_test?driver=oursql&charset=utf8&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py27-mysql-oursql-noauto]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[oursql]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-oursql3-noauto]
commands = {[oursql]commands}

[pymysql]
commands =
    {[testenv]commands}
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://localhost/sqlobject_test?driver=pymysql&charset=utf8&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py27-mysql-pymysql]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[pymysql]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-pymysql]
commands = {[pymysql]commands}

[mariadb]
commands =
    {[testenv]commands}
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://localhost/sqlobject_test?driver=mariadb&charset=utf8&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py{27,34,35}-mariadb]
commands = {envpython} -c "print('mariadb requires Python 3.6+')"
deps =

[testenv:py3{6,7,8,9,10,11}-mariadb]
commands = {[mariadb]commands}

[mysql-pyodbc]
commands =
    {[testenv]commands}
    {envpython} -c "import pyodbc; print(pyodbc.drivers())"
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://localhost/sqlobject_test?driver=pyodbc&odbcdrv=MySQL&charset=utf8&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py27-mysql-pyodbc-noauto]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mysql-pyodbc]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-pyodbc-noauto]
commands = {[mysql-pyodbc]commands}

[mysql-pypyodbc]
commands =
    {[testenv]commands}
    -mysql --execute="drop database sqlobject_test;"
    mysql --execute="create database sqlobject_test;"
    pytest -D "mysql://localhost/sqlobject_test?driver=pypyodbc&odbcdrv=MySQL&charset=utf8&debug=1"
    mysql --execute="drop database sqlobject_test;"

[testenv:py27-mysql-pypyodbc-noauto]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mysql-pypyodbc]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-pypyodbc-noauto]
commands = {[mysql-pypyodbc]commands}

# PostgreSQL test environments
[psycopg]
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=psycopg&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-psycopg]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[psycopg]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-psycopg]
commands = {[psycopg]commands}

[pygresql]
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pygresql&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pygresql]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[pygresql]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pygresql]
commands = {[pygresql]commands}

[pypostgresql]
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pypostgresql&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pypostgresql-noauto]
commands = {envpython} -c "print('pypostgresql requires Python 3.4+')"
deps =

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pypostgresql-noauto]
commands = {[pypostgresql]commands}

[pg8000]
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pg8000&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pg8000]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[pg8000]commands}

[testenv:py3{4,5,6}-postgres-pg8000]
commands = {[pg8000]commands}

[testenv:py3{7,8,9,10,11}-postgres-pg8000-noauto]
commands = {[pg8000]commands}

[postgres-pyodbc]
commands =
    {[testenv]commands}
    {envpython} -c "import pyodbc; print(pyodbc.drivers())"
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pyodbc&odbcdrv=PostgreSQL%20ANSI&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pyodbc-noauto]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[postgres-pyodbc]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pyodbc-noauto]
commands = {[postgres-pyodbc]commands}

[postgres-pypyodbc]
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pypyodbc&odbcdrv=PostgreSQL%20ANSI&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pypyodbc-noauto]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[postgres-pypyodbc]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pypyodbc-noauto]
commands = {[postgres-pypyodbc]commands}


# SQLite test environments
[sqlite]
commands =
    {[testenv]commands}
    -rm -f /tmp/sqlobject_test.sqdb
    pytest -D "sqlite:///tmp/sqlobject_test.sqdb?debug=1"
    rm -f /tmp/sqlobject_test.sqdb

[testenv:py27-sqlite]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[sqlite]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-sqlite]
commands = {[sqlite]commands}

[sqlite-memory]
commands =
    {[testenv]commands}
    pytest -D sqlite:/:memory:?debug=1

[testenv:py27-sqlite-memory]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[sqlite-memory]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-sqlite-memory]
commands = {[sqlite-memory]commands}

[sqlite-supersqlite]
commands =
    {[testenv]commands}
    -rm -f /tmp/sqlobject_test.sqdb
    -pytest -D "sqlite:///tmp/sqlobject_test.sqdb?driver=supersqlite&debug=1"
    rm -f /tmp/sqlobject_test.sqdb

[testenv:py27-sqlite-supersqlite]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[sqlite-supersqlite]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-sqlite-supersqlite]
commands = {[sqlite-supersqlite]commands}


# Firebird database test environments
[fdb]
commands =
    {[testenv]commands}
    sudo rm -f /tmp/test.fdb
    isql-fb -u test -p test -i /var/lib/firebird/create_test_db
    pytest -D "firebird://test:test@localhost/tmp/test.fdb?debug=1"
    sudo rm -f /tmp/test.fdb

[testenv:py27-firebird-fdb]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[fdb]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-firebird-fdb]
commands = {[fdb]commands}

[firebirdsql]
commands =
    {[testenv]commands}
    sudo rm -f /tmp/test.fdb
    isql-fb -u test -p test -i /var/lib/firebird/create_test_db
    pytest -D "firebird://test:test@localhost:3050/tmp/test.fdb?driver=firebirdsql&charset=utf8&debug=1"
    sudo rm -f /tmp/test.fdb

[testenv:py27-firebirdsql]
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[firebirdsql]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-firebirdsql]
commands = {[firebirdsql]commands}


# Special test environments
[testenv:py{27,34,35,36,37,38,39,310,311}-flake8]
changedir = ./
deps =
    flake8
    pytest < 7.0
commands =
    {[testenv]commands}
    flake8 .


# Windows testing
[mysql-connector-w32]
platform = win32
commands =
    {[testenv]commands}
    -mysql --user=ODBC -e "drop database sqlobject_test;"
    mysql --user=ODBC -e "create database sqlobject_test;"
    pytest -D "mysql://ODBC@localhost/sqlobject_test?driver=connector&charset=utf8&debug=1"
    mysql --user=ODBC -e "drop database sqlobject_test;"

[testenv:py27-mysql-connector-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mysql-connector-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-connector-w32]
platform = win32
commands = {[mysql-connector-w32]commands}

[pymysql-w32]
platform = win32
commands =
    {[testenv]commands}
    -mysql --user=ODBC -e "drop database sqlobject_test;"
    mysql --user=ODBC -e "create database sqlobject_test;"
    pytest -D "mysql://ODBC@localhost/sqlobject_test?driver=pymysql&charset=utf8&debug=1"
    mysql --user=ODBC -e "drop database sqlobject_test;"

[testenv:py27-mysql-pymysql-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[pymysql-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-pymysql-w32]
platform = win32
commands = {[pymysql-w32]commands}

[mariadb-w32]
platform = win32
commands =
    {[testenv]commands}
    -mysql --user=ODBC -e "drop database sqlobject_test;"
    mysql --user=ODBC -e "create database sqlobject_test;"
    pytest -D "mysql://ODBC@localhost/sqlobject_test?driver=mariadb&charset=utf8&debug=1"
    mysql --user=ODBC -e "drop database sqlobject_test;"

[testenv:py{27,34,35}-mariadb-w32]
platform = win32
commands = {envpython} -c "print('mariadb requires Python 3.6+')"
deps =

[testenv:py3{6,7,8,9,10,11}-mariadb-w32]
platform = win32
commands = {[mariadb-w32]commands}

[mysql-pyodbc-w32]
platform = win32
commands =
    {[testenv]commands}
    {envpython} -c "import pyodbc; print(pyodbc.drivers())"
    -mysql --user=ODBC -e "drop database sqlobject_test;"
    mysql --user=ODBC -e "create database sqlobject_test;"
    pytest -D "mysql://ODBC@localhost/sqlobject_test?driver=pyodbc&odbcdrv=MySQL%20ODBC%205.3%20ANSI%20Driver&charset=utf8&debug=1"
    mysql --user=ODBC -e "drop database sqlobject_test;"

[testenv:py27-mysql-pyodbc-noauto-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mysql-pyodbc-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-pyodbc-noauto-w32]
platform = win32
commands = {[mysql-pyodbc-w32]commands}

[mysql-pypyodbc-w32]
platform = win32
commands =
    {[testenv]commands}
    {envpython} -c "import pypyodbc; print(pypyodbc.drivers())"
    -mysql --user=ODBC -e "drop database sqlobject_test;"
    mysql --user=ODBC -e "create database sqlobject_test;"
    pytest -D "mysql://ODBC@localhost/sqlobject_test?driver=pypyodbc&odbcdrv=MySQL%20ODBC%205.3%20ANSI%20Driver&charset=utf8&debug=1"
    mysql --user=ODBC -e "drop database sqlobject_test;"

[testenv:py27-mysql-pypyodbc-noauto-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mysql-pypyodbc-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mysql-pypyodbc-noauto-w32]
platform = win32
commands = {[mysql-pypyodbc-w32]commands}

[psycopg-w32]
platform = win32
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=psycopg2&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-psycopg-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[psycopg-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-psycopg-w32]
platform = win32
commands = {[psycopg-w32]commands}

[pygresql-w32]
platform = win32
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    -pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pygresql&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pygresql-noauto-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[pygresql-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pygresql-w32]
platform = win32
commands = {[pygresql-w32]commands}

[pypostgresql-w32]
platform = win32
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pypostgresql&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pypostgresql-noauto-w32]
platform = win32
commands = {envpython} -c "print('pypostgresql requires Python 3.4+')"
deps =

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pypostgresql-noauto-w32]
platform = win32
commands = {[pypostgresql-w32]commands}

[pg8000-w32]
platform = win32
commands =
    {[testenv]commands}
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pg8000&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pg8000-noauto-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[pg8000-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pg8000-w32]
platform = win32
commands = {[pg8000-w32]commands}

[postgres-pyodbc-w32]
platform = win32
commands =
    {[testenv]commands}
    {envpython} -c "import pyodbc; print(pyodbc.drivers())"
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pyodbc&odbcdrv=PostgreSQL%20ANSI%28x64%29&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pyodbc-noauto-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[postgres-pyodbc-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pyodbc-noauto-w32]
platform = win32
commands = {[postgres-pyodbc-w32]commands}

[postgres-pypyodbc-w32]
platform = win32
commands =
    {[testenv]commands}
    {envpython} -c "import pypyodbc; print(pypyodbc.drivers())"
    -dropdb --username=runner --no-password sqlobject_test
    createdb --username=runner --no-password sqlobject_test
    pytest -D "postgres://runner:test@localhost/sqlobject_test?driver=pypyodbc&odbcdrv=PostgreSQL%20ANSI%28x64%29&charset=utf-8&debug=1"
    dropdb --username=runner --no-password sqlobject_test

[testenv:py27-postgres-pypyodbc-noauto-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[postgres-pypyodbc-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-postgres-pypyodbc-noauto-w32]
platform = win32
commands = {[postgres-pypyodbc-w32]commands}

[sqlite-w32]
platform = win32
commands =
    {[testenv]commands}
    pytest -D sqlite:/{env:TEMP}/sqlobject_test.sqdb?debug=1
    cmd /c "del {env:TEMP}\sqlobject_test.sqdb"

[testenv:py27-sqlite-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[sqlite-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-sqlite-w32]
platform = win32
commands = {[sqlite-w32]commands}

[sqlite-memory-w32]
platform = win32
commands =
    {[testenv]commands}
    pytest -D sqlite:/:memory:?debug=1

[testenv:py27-sqlite-memory-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[sqlite-memory-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-sqlite-memory-w32]
platform = win32
commands = {[sqlite-memory-w32]commands}

[mssql-pymssql-w32]
platform = win32
commands =
    -sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "DROP DATABASE sqlobject_test"
    sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "CREATE DATABASE sqlobject_test"
    pytest -D "mssql://SA:YourStrong!Passw0rd@localhost:1433/sqlobject_test?driver=pymssql&debug=1"
    sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "DROP DATABASE sqlobject_test"

[testenv:py27-mssql-pymssql-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mssql-pymssql-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mssql-pymssql-w32]
platform = win32
commands = {[mssql-pymssql-w32]commands}

[mssql-pytds-w32]
platform = win32
commands =
    -sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "DROP DATABASE sqlobject_test"
    sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "CREATE DATABASE sqlobject_test"
    pytest -D "mssql://SA:YourStrong!Passw0rd@localhost:1433/sqlobject_test?driver=pytds&debug=1"
    sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "DROP DATABASE sqlobject_test"

[testenv:py27-mssql-pytds-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
    {[mssql-pytds-w32]commands}

[testenv:py3{4,5,6,7,8,9,10,11}-mssql-pytds-w32]
platform = win32
commands = {[mssql-pytds-w32]commands}

[mssql-pyodbc-w32]
platform = win32
commands =
    {envpython} -c "import pyodbc; print(pyodbc.drivers())"
    -sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "DROP DATABASE sqlobject_test"
    sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "CREATE DATABASE sqlobject_test"
    pytest -D "mssql://SA:YourStrong!Passw0rd@localhost/sqlobject_test?driver=pyodbc&odbcdrv=SQL%20Server&debug=1"
    sqlcmd -U SA -P "YourStrong!Passw0rd" -Q "DROP DATABASE sqlobject_test"

[testenv:py27-mssql-pyodbc-noauto-w32]
platform = win32
commands =
    easy_install -i https://downloads.egenix.com/python/index/ucs2/ egenix-mx-base
